import { AnyRecord } from '@powership/utils';

import { ResolverKind } from '../Resolver';
import { FieldInput } from '../fields/_parseFields';

import { GraphType } from './GraphType';

export type GraphQLClientError = { message: string; path: string[] };

export type ID = number | string;
export type Ulid = string;
export type Email = string;

export type GraphQLClientResponse<Result> =
  | { data: Result; errors: null }
  | { data: null; errors: GraphQLClientError[] };

export interface GraphQlClientFetchOperation {
  query: string;
  varNames: {
    [K: string]: {
      comments: string;
      name: string;
      type: FieldInput;
      varName: string;
    };
  };
}

export interface GraphQLClientFetchHelper<
  Args extends AnyRecord | undefined = any
> {
  operationName: string;
  kind: ResolverKind;
  payload: GraphType<any>;
  input: GraphType<any>;
  operation: GraphQlClientFetchOperation;
}

export interface GraphqlClientHelpers {
  [K: string]: GraphQLClientFetchHelper;
}
